Git Repository
	Git Download
	Github Account
	create new repository
	Git set for the folder
		git init // cmd on folder
	set the origin
		git remote add origin https://github.com/msi24562/Laravel-practice.git
		git branch -M main
	check branch
		git branch
	set the branch
		git checkout -b main
	To aad the changes on git for the changed file
		git add .
	Add comment for the change
		git commit -m "Initial commit"
	Push the File to repository
		git push -u origin main



for clone the project
    git clone https://github.com/msi24562/Laravel-practice.git

    For .env file
        cp .env.example .env

    Key generate and update in .env file
        php artisan key:generate

    Clear cache
        php artisan config:clear


if want to change the port to run
    alias laravel-serve="php artisan serve --port=8080"


Create Project
	composer create-project --prefer-dist laravel/laravel project-name
	cd project-name
	php artisan serve

	Set the env file for database connection

	for model and migration
		php artisan make:model Post -m

	In Migration set the scema of table
		public function up()
		{
			Schema::create('posts', function (Blueprint $table) {
				$table->id();
				$table->string('title');
				$table->text('content');
				$table->timestamps();
			});
		}

	Migrate to db
		php artisan migrate

    Create Controllers
        php artisan make:controller PostController --resource //Create controller with basic methods

        index(): Show all posts.
        create(): Show a form to create a post.
        store(): Save a new post.
        edit(): Show a form to edit a post.
        update(): Update a post.
        destroy(): Delete a post.


    Create Blade Views
        Create views in resources/views/posts:

            index.blade.php - Display all posts.
            create.blade.php - Form to create a new post.
            edit.blade.php - Form to edit an existing post.
            show.blade.php - Show details of a single post.


	Define Routes on web.php
		use App\Http\Controllers\PostController;  //Include Controllers
		Route::resource('posts', PostController::class); //path to Routes




















    <!--POST Controller-->

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Post;    every model use will add here

class PostController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $posts = Post::all(); // Fetch posts from the database
        return view('posts.index', compact('posts'));
    }


    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $posts = Post::all(); // Fetch posts from the database
        return view('posts.create', compact('posts'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $req)
    {
        $validated =Request()->validate([
            'title' => 'required|string|max:255',
            'content' => 'required',
        ]);

        $post = new Post;
        //$post->user_id = Auth::user()->id;
        $post->title = $req->title;
        $post->content = $req->content;
        $post->save();

        //Post::create($validated);

        return redirect()->route('posts.index')->with('success', 'Post created successfully!');
    }


    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $post = Post::where('id',$id)->first();
        return view('posts.edit',compact('post'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $req, $id)
    {
        $post = Post::find($id);

        $post->title = $req->title;
        $post->content = $req->content;
        $post->save();
        return redirect()->route('posts.index')->with('success', 'Post Updated Successfully!');
        //return back()->with(['msg_success'=>'Updated Successfully']);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $post = Post::where('id',$id);
        $post->delete();
        return back();
    }
}



